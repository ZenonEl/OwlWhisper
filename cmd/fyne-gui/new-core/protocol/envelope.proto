// envelope.proto
syntax = "proto3";

package protocol;

import "identity.proto";

option go_package = "./";
// SecureEnvelope - это стандартный криптографический конверт для всех
// сообщений, передающих содержание. Он обеспечивает конфиденциальность.
message SecureEnvelope {
  // Публичный ключ автора. Нужен, чтобы получатель знал, от кого пришло
  // сообщение, и мог отобразить его имя/аватар.
  IdentityPublicKey author_identity = 1;

  // Тип полезной нагрузки, которая лежит внутри ciphertext.
  // Например: "protocol.ChatMessage", "protocol.FileChunk".
  // Это инструкция для GUI, как десериализовать расшифрованные данные.
  string payload_type = 2;

  // Зашифрованный массив байт исходного сообщения (например, ChatMessage).
  // Шифруется симметричным ключом, известным участникам "контекста"
  // (чата 1:1 или группы).
  bytes ciphertext = 3;

  // Nonce (или IV), который использовался для шифрования. Критически важен
  // для безопасности режимов шифрования, таких как AES-GCM.
  // Должен быть уникальным для каждой пары (ключ, сообщение).
  bytes nonce = 4;
}