#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä Python –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è Owl Whisper

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
- –†–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é
- –í—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π API
"""

import ctypes
import json
import time
import sys
import os

def load_library():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É OwlWhisper"""
    # –ü—É—Ç—å –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
    lib_path = "./dist/libowlwhisper.so"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(lib_path):
        print(f"‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {lib_path}")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: go build -buildmode=c-shared -o dist/libowlwhisper.so ./cmd/owlwhisper")
        sys.exit(1)
    
    try:
        return ctypes.CDLL(lib_path)
    except OSError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: {e}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è: export LD_LIBRARY_PATH=./dist:$LD_LIBRARY_PATH")
        sys.exit(1)

def safe_get_string(owlwhisper, func_call):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ C —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –ø–∞–º—è—Ç—å"""
    try:
        result_ptr = func_call()
        if result_ptr:
            result_str = ctypes.string_at(result_ptr).decode('utf-8')
            owlwhisper.FreeString(result_ptr)
            return result_str
        return ""
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏: {e}")
        return ""

def test_logging_configuration(owlwhisper):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüîß === –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===")
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏
    print("üîá –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –ª–æ–≥–∏...")
    result = owlwhisper.SetLogLevel(0)  # SILENT
    if result == 0:
        print("‚úÖ –õ–æ–≥–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ª–æ–≥–æ–≤")
    
    # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—ã–≤–æ–¥ –≤ —Ñ–∞–π–ª
    # owlwhisper.SetLogOutput(2, b"./logs")  # –¢–æ–ª—å–∫–æ –≤ —Ñ–∞–π–ª
    # owlwhisper.SetLogOutput(3, b"./logs")  # –í –∫–æ–Ω—Å–æ–ª—å –∏ —Ñ–∞–π–ª

def test_basic_operations(owlwhisper):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    print("\nüöÄ === –¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π ===")
    
    # –ó–∞–ø—É—Å–∫
    print("üèÅ –ó–∞–ø—É—Å–∫ Owl Whisper...")
    result = owlwhisper.StartOwlWhisper()
    if result != 0:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞")
        return False
    
    print("‚úÖ Owl Whisper –∑–∞–ø—É—â–µ–Ω")
    time.sleep(2)  # –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ Peer ID
    print("\nüë§ –ü–æ–ª—É—á–µ–Ω–∏–µ Peer ID...")
    peer_id = safe_get_string(owlwhisper, owlwhisper.GetMyPeerID)
    print(f"   Peer ID: {peer_id}")
    
    # –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    status_str = safe_get_string(owlwhisper, owlwhisper.GetConnectionStatus)
    try:
        status = json.loads(status_str)
        print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω: {status.get('connected', False)}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—Ä–æ–≤: {status.get('peers', 0)}")
        print(f"   –ú–æ–π Peer ID: {status.get('my_peer_id', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
    except json.JSONDecodeError:
        print(f"   –°—Ç–∞—Ç—É—Å (—Å—ã—Ä–æ–π): {status_str}")
    
    # –°–ø–∏—Å–æ–∫ –ø–∏—Ä–æ–≤
    print("\nüë• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∏—Ä–æ–≤...")
    peers_str = safe_get_string(owlwhisper, owlwhisper.GetPeers)
    try:
        peers = json.loads(peers_str)
        print(f"   –ù–∞–π–¥–µ–Ω–æ –ø–∏—Ä–æ–≤: {len(peers)}")
        for i, peer in enumerate(peers[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3
            short_id = peer[:20] + "..." if len(peer) > 20 else peer
            print(f"   {i+1}. {short_id}")
        if len(peers) > 3:
            print(f"   ... –∏ –µ—â–µ {len(peers) - 3} –ø–∏—Ä–æ–≤")
    except json.JSONDecodeError:
        print(f"   –ü–∏—Ä—ã (—Å—ã—Ä–æ–π): {peers_str}")
    
    return True

def test_profile_operations(owlwhisper):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏"""
    print("\nüë§ === –¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏ ===")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
    print("üìÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è...")
    profile_str = safe_get_string(owlwhisper, owlwhisper.GetMyProfile)
    try:
        profile = json.loads(profile_str)
        print(f"   –ù–∏–∫–Ω–µ–π–º: {profile.get('nickname', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   –î–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ç–æ—Ä: {profile.get('discriminator', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è: {profile.get('display_name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   –û–Ω–ª–∞–π–Ω: {profile.get('is_online', False)}")
    except json.JSONDecodeError:
        print(f"   –ü—Ä–æ—Ñ–∏–ª—å (—Å—ã—Ä–æ–π): {profile_str}")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    print("\nüìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è...")
    new_nickname = "PythonUser_" + str(int(time.time()))
    nickname_bytes = new_nickname.encode('utf-8')
    result = owlwhisper.UpdateMyProfile(nickname_bytes)
    
    if result == 0:
        print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: {new_nickname}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è...")
        updated_profile_str = safe_get_string(owlwhisper, owlwhisper.GetMyProfile)
        try:
            updated_profile = json.loads(updated_profile_str)
            print(f"   –ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º: {updated_profile.get('nickname', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   –ù–æ–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è: {updated_profile.get('display_name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        except json.JSONDecodeError:
            print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (—Å—ã—Ä–æ–π): {updated_profile_str}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")

def test_memory_stress(owlwhisper):
    """–°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é"""
    print("\nüîÑ === –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é ===")
    
    print("üß™ –í—ã–ø–æ–ª–Ω—è–µ–º 50 –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞–º—è—Ç–∏...")
    for i in range(50):
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Å—Ç—Ä–æ–∫–∏
        _ = safe_get_string(owlwhisper, owlwhisper.GetMyPeerID)
        _ = safe_get_string(owlwhisper, owlwhisper.GetPeers)
        _ = safe_get_string(owlwhisper, owlwhisper.GetConnectionStatus)
        _ = safe_get_string(owlwhisper, owlwhisper.GetMyProfile)
        
        if i % 10 == 0:
            print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {i}/50")
    
    print("‚úÖ –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫ –ø–∞–º—è—Ç–∏")

def test_messaging(owlwhisper):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("\nüí¨ === –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ===")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —à–∏—Ä–æ–∫–æ–≤–µ—â–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_message = f"–ü—Ä–∏–≤–µ—Ç –æ—Ç Python! –í—Ä–µ–º—è: {time.strftime('%H:%M:%S')}"
    message_bytes = test_message.encode('utf-8')
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {test_message}")
    result = owlwhisper.SendMessage(message_bytes)
    
    if result == 0:
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è")

def shutdown(owlwhisper):
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Owl Whisper"""
    print("\nüõë === –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ===")
    
    result = owlwhisper.StopOwlWhisper()
    if result == 0:
        print("‚úÖ Owl Whisper –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üêç Python –∫–ª–∏–µ–Ω—Ç –¥–ª—è Owl Whisper")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    print("üìö –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏...")
    owlwhisper = load_library()
    print("‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        test_logging_configuration(owlwhisper)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        if not test_basic_operations(owlwhisper):
            return
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª–∏
        test_profile_operations(owlwhisper)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
        test_messaging(owlwhisper)
        
        # –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –ø–∞–º—è—Ç–∏
        test_memory_stress(owlwhisper)
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –í—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
        shutdown(owlwhisper)

if __name__ == "__main__":
    main()