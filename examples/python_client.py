#!/usr/bin/env python3
"""
Python –∫–ª–∏–µ–Ω—Ç –¥–ª—è Owl Whisper —á–µ—Ä–µ–∑ Go –±–∏–±–ª–∏–æ—Ç–µ–∫—É
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç ctypes –¥–ª—è –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π
"""

import ctypes
import json
import os
import sys

# –ü—É—Ç—å –∫ Go –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
LIBRARY_PATH = "../dist/libowlwhisper.so"

def load_library():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç Go –±–∏–±–ª–∏–æ—Ç–µ–∫—É"""
    if not os.path.exists(LIBRARY_PATH):
        print(f"‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {LIBRARY_PATH}")
        print("–°–Ω–∞—á–∞–ª–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä—É–π—Ç–µ Go –≤ shared library:")
        print("go build -buildmode=c-shared -o dist/libowlwhisper.so ./cmd/owlwhisper")
        sys.exit(1)
    
    try:
        lib = ctypes.CDLL(LIBRARY_PATH)
        print("‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return lib
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: {e}")
        sys.exit(1)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü¶â Owl Whisper Python Client")
    print("=" * 40)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    owlwhisper = load_library()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∏–ø—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    owlwhisper.GetMyPeerID.restype = ctypes.c_char_p
    owlwhisper.GetPeers.restype = ctypes.c_char_p
    owlwhisper.GetConnectionStatus.restype = ctypes.c_char_p
    owlwhisper.GetChatHistory.restype = ctypes.c_char_p
    owlwhisper.GetChatHistoryLimit.restype = ctypes.c_char_p
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ Owl Whisper...")
    result = owlwhisper.StartOwlWhisper()
    if result == 0:
        print("‚úÖ Owl Whisper –∑–∞–ø—É—â–µ–Ω")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞")
        return
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ
        print("\nüë§ –ú–æ–π Peer ID:")
        peer_id = owlwhisper.GetMyPeerID()
        if peer_id:
            print(f"   {peer_id.decode('utf-8')}")
            # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–∞–º—è—Ç—å
            owlwhisper.FreeString(peer_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\nüåê –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
        status = owlwhisper.GetConnectionStatus()
        if status:
            try:
                status_data = json.loads(status.decode('utf-8'))
                print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω: {status_data.get('connected', 'Unknown')}")
                print(f"   –ü–∏—Ä–æ–≤: {status_data.get('peers', 'Unknown')}")
            except json.JSONDecodeError:
                print(f"   {status.decode('utf-8')}")
            finally:
                owlwhisper.FreeString(status)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∏—Ä–æ–≤
        print("\nüë• –°–ø–∏—Å–æ–∫ –ø–∏—Ä–æ–≤:")
        peers = owlwhisper.GetPeers()
        if peers:
            try:
                peers_data = json.loads(peers.decode('utf-8'))
                if peers_data:
                    for i, peer in enumerate(peers_data, 1):
                        print(f"   {i}. {peer}")
                else:
                    print("   –ü–∏—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
            except json.JSONDecodeError:
                print(f"   {peers.decode('utf-8')}")
            finally:
                owlwhisper.FreeString(peers)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        print("\nüí¨ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        test_message = "–ü—Ä–∏–≤–µ—Ç –æ—Ç Python –∫–ª–∏–µ–Ω—Ç–∞! üêç"
        result = owlwhisper.SendMessage(test_message.encode('utf-8'))
        if result == 0:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        print("\nüìö –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞:")
        history = owlwhisper.GetChatHistory(b"test-peer")
        if history:
            try:
                history_data = json.loads(history.decode('utf-8'))
                if history_data:
                    for msg in history_data:
                        print(f"   [{msg.get('timestamp', 'Unknown')}] {msg.get('text', 'Unknown')}")
                else:
                    print("   –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞")
            except json.JSONDecodeError:
                print(f"   {history.decode('utf-8')}")
            finally:
                owlwhisper.FreeString(history)
        
        print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥...")
        import time
        time.sleep(5)
        
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Owl Whisper
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Owl Whisper...")
        result = owlwhisper.StopOwlWhisper()
        if result == 0:
            print("‚úÖ Owl Whisper –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

if __name__ == "__main__":
    main() 