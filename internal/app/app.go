package app

import (
	"context"
	"fmt"
	"log"
	"os"
	"os/signal"
	"syscall"

	"OwlWhisper/internal/core"
	"OwlWhisper/internal/tui/controller"
	"OwlWhisper/pkg/config"
	"OwlWhisper/pkg/interfaces"
)

// App –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
type App struct {
	coreService   interfaces.CoreService
	tuiController *controller.Controller
	config        *interfaces.Config

	ctx    context.Context
	cancel context.CancelFunc
}

// NewApp —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
func NewApp() (*App, error) {
	ctx, cancel := context.WithCancel(context.Background())

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
	cfg := config.DefaultConfig()

	// –°–æ–∑–¥–∞–µ–º CORE —Å–µ—Ä–≤–∏—Å
	coreService, err := core.NewService(cfg)
	if err != nil {
		cancel()
		return nil, fmt.Errorf("–Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å CORE —Å–µ—Ä–≤–∏—Å: %w", err)
	}

	// –°–æ–∑–¥–∞–µ–º TUI –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
	var tuiController *controller.Controller
	if cfg.UI.EnableTUI {
		tuiController = controller.NewController(coreService)
	}

	app := &App{
		coreService:   coreService,
		tuiController: tuiController,
		config:        cfg,
		ctx:           ctx,
		cancel:        cancel,
	}

	return app, nil
}

// Run –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
func (app *App) Run() error {
	// –ó–∞–ø—É—Å–∫–∞–µ–º CORE —Å–µ—Ä–≤–∏—Å
	if err := app.coreService.Start(app.ctx); err != nil {
		return fmt.Errorf("–Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å CORE —Å–µ—Ä–≤–∏—Å: %w", err)
	}

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è graceful shutdown
	sigChan := make(chan os.Signal, 1)
	signal.Notify(sigChan, syscall.SIGINT, syscall.SIGTERM)

	// –ó–∞–ø—É—Å–∫–∞–µ–º TUI –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
	if app.tuiController != nil {
		go func() {
			if err := app.tuiController.Start(); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ TUI: %v", err)
				app.cancel()
			}
		}()
	}

	// –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
	<-sigChan
	log.Println("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")

	// Graceful shutdown
	return app.Shutdown()
}

// Shutdown –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
func (app *App) Shutdown() error {
	// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TUI
	if app.tuiController != nil {
		app.tuiController.Stop()
	}

	// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CORE —Å–µ—Ä–≤–∏—Å
	if err := app.coreService.Stop(app.ctx); err != nil {
		log.Printf("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ CORE —Å–µ—Ä–≤–∏—Å–∞: %v", err)
	}

	// –û—Ç–º–µ–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
	app.cancel()

	log.Println("üëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
	return nil
}
